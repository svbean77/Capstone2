import 'package:flutter/material.dart';
import 'package:test_exercise_guide/screen/exercise_guide.dart';
import 'package:test_exercise_guide/screen/test_screen.dart';
import 'package:test_exercise_guide/screen/test_screen3.dart';

class TestScreen2 extends StatelessWidget {
  final jsondata;
  const TestScreen2({
    required this.jsondata,
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(appBar: AppBar(
      actions: [
        GestureDetector(
          child: Icon(Icons.home),
          onTap: (){
            Navigator.of(context).push(
              MaterialPageRoute(
                builder: (BuildContext context) => TestScreen(level: "숙련자"),
              ),
            );
          },
        ),
      ],
    ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          ElevatedButton(
            onPressed: () {
              print(jsondata.runtimeType);
            },
            child: Text('타입 출력'),
          ),
          SizedBox(height: 8.0),
          ElevatedButton(
            onPressed: () {
              print(jsondata);
            },
            child: Text('내용 출력'),
          ),
          SizedBox(height: 8.0),
          ElevatedButton(
            onPressed: () {
              Autogenerated data = Autogenerated.fromJson(jsondata);
              print(data.runtimeType);
            },
            child: Text('매핑 타입 출력'),
          ),
          SizedBox(height: 8.0),
          ElevatedButton(
            onPressed: () {
              Autogenerated data = Autogenerated.fromJson(jsondata);
              print(data.result.runtimeType);
              print(data.result!.length);
              if (data.result!.length != 0) print(data.result![0].muscle);
              Navigator.of(context).push(
                MaterialPageRoute(
                  builder: (BuildContext context) => TestScreen3(data: data.result),
                ),
              );
            },
            child: Text('매핑 내용 출력'),
          ),
        ],
      ),
    );
  }
}

class Autogenerated {
  List<Result>? result;

  Autogenerated({this.result});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    if (json['result'] != null) {
      result = <Result>[];
      json['result'].forEach((v) {
        result!.add(new Result.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.result != null) {
      data['result'] = this.result!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Result {
  String? muscle;
  String? equipment;
  String? difficulty;
  String? exercise;
  String? image1;
  String? image2;
  String? step;

  Result(
      {this.muscle,
      this.equipment,
      this.difficulty,
      this.exercise,
      this.image1,
      this.image2,
      this.step});

  Result.fromJson(Map<String, dynamic> json) {
    muscle = json['muscle'];
    equipment = json['equipment'];
    difficulty = json['difficulty'];
    exercise = json['exercise'];
    image1 = json['image1'];
    image2 = json['image2'];
    step = json['step'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['muscle'] = this.muscle;
    data['equipment'] = this.equipment;
    data['difficulty'] = this.difficulty;
    data['exercise'] = this.exercise;
    data['image1'] = this.image1;
    data['image2'] = this.image2;
    data['step'] = this.step;
    return data;
  }
}
